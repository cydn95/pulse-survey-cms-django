# -*- coding: utf-8 -*-
# Generated by Django 1.11.25 on 2022-03-02 07:27
from __future__ import unicode_literals

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientName', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ConfigPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tabName', models.CharField(max_length=40)),
                ('pageName', models.CharField(max_length=200)),
                ('pageContent', tinymce.models.HTMLField()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driverName', models.CharField(max_length=200)),
                ('iconPath', models.CharField(blank=True, max_length=255)),
                ('driveOrder', models.PositiveIntegerField(default=0)),
                ('isStandard', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['driveOrder'],
            },
        ),
        migrations.CreateModel(
            name='NikelMobilePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pageName', models.CharField(max_length=50)),
                ('pageText', models.CharField(blank=True, max_length=500)),
                ('backgroundColor', colorfield.fields.ColorField(blank=True, default='#FF0000', max_length=18)),
                ('pageContent', tinymce.models.HTMLField()),
                ('pageOrder', models.PositiveIntegerField(default=0, verbose_name='Page Order')),
                ('img', models.FileField(blank=True, upload_to='uploads/nikel')),
            ],
            options={
                'ordering': ['pageOrder'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectName', models.CharField(max_length=200)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Client')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectVideoUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('videoFile', models.FileField(upload_to='uploads/pvideo')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectCode', models.CharField(blank=True, default='', max_length=20)),
                ('projectLogo', models.ImageField(blank=True, upload_to='uploads/logo', verbose_name='Project Logo')),
                ('companyLogo', models.ImageField(blank=True, upload_to='uploads/logo', verbose_name='Company Logo')),
                ('surveyTitle', models.CharField(max_length=200)),
                ('projectManager', models.CharField(blank=True, default='', max_length=100)),
                ('isStandard', models.BooleanField(default=False)),
                ('isActive', models.BooleanField(default=False)),
                ('customGroup1', models.CharField(blank=True, default='', max_length=100)),
                ('customGroup2', models.CharField(blank=True, default='', max_length=100)),
                ('customGroup3', models.CharField(blank=True, default='', max_length=100)),
                ('anonymityThreshold', models.PositiveIntegerField(default=3)),
                ('seatsPurchased', models.PositiveIntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ToolTipGuide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('content', models.CharField(max_length=1000)),
                ('img', models.FileField(blank=True, upload_to='uploads/tooltip')),
                ('group', models.CharField(max_length=50)),
                ('tooltipOrder', models.PositiveIntegerField(default=0, verbose_name='Tooltip Order')),
            ],
            options={
                'ordering': ['tooltipOrder'],
            },
        ),
        migrations.AddField(
            model_name='nikelmobilepage',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Survey'),
        ),
        migrations.AddField(
            model_name='driver',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Survey'),
        ),
        migrations.AddField(
            model_name='configpage',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Survey'),
        ),
    ]
